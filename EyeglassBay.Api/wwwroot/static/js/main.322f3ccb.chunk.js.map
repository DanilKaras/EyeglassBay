{"version":3,"sources":["app/api/agent.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/eyeglassStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/home/HomePage.tsx","app/layout/PrivateRoute.tsx","app/layout/LoadingComponent.tsx","app/common/modals/ModalContainer.tsx","features/eyeglass/EyeglassList.tsx","features/document/DocumentUpload.tsx","features/errors/ValidationErrors.tsx","features/errors/TestError.tsx","features/errors/ServerError.tsx","features/errors/NotFound.tsx","features/search/Search.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","Account","current","get","login","user","post","responseBody","url","then","body","put","del","delete","agent","EyeGlasses","listAll","getById","id","create","eyeGlass","update","UserStore","creds","setToken","runInAction","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","console","log","makeAutoObservable","this","eyeglassStore","eyeGlasses","loading","loadingInitial","loadEyeglasses","setLoadingInitial","state","getItem","appLoaded","setAppLoaded","reaction","setItem","userStore","modal","open","openModal","content","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","position","Image","avatar","spaced","Dropdown","pointing","text","onClick","icon","MyTextInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","color","initialValues","email","password","onSubmit","values","setErrors","catch","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","marginBottom","Button","positive","fluid","HomePage","Segment","vertical","size","isLoggedIn","Link","PrivateRoute","Component","component","rest","LoadingComponent","Dimmer","active","Loader","Modal","onClose","Content","useEffect","List","map","productName","ValidationErrors","Message","err","i","TestErrors","useState","Group","widths","baseUrl","primary","sub","statusText","marginTop","NotFound","Icon","Inline","finally","hideProgressBar","path","Search","EyeglassList","DocumentUpload","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","useLocation","scrollTo","createBrowserHistory","ReactDOM","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.322f3ccb.chunk.js","sourcesContent":["import axios, {AxiosError, AxiosResponse} from \"axios\";\nimport {EyeGlass} from \"../models/eyeGlass\";\nimport {toast} from \"react-toastify\";\nimport {history} from '../../index';\nimport {store} from \"../stores/store\";\nimport {User, UserFormValues} from \"../models/user\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if(token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    return response; \n}, (error: AxiosError) => {\n    const {data, status, config} = error.response!;\n    switch (status){\n        case 400:\n            if(typeof data === 'string'){\n                toast.error(data);\n            }\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\n               history.push('/not-found');\n            }\n            if(data.errors){\n                const modalStateErrors = [];\n                for(const key in data.errors){\n                    if(data.errors[key]){\n                        modalStateErrors.push(data.errors[key]);\n                    }\n                }\n                throw modalStateErrors.flat();\n            } else {\n                toast.error(data);\n            }\n            break;\n        case 401:\n            //toast.error('unauthorised');\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            store.commonStore.setServerError(error);\n            history.push('/server-error');\n            break;\n    }\n    return Promise.reject(error);\n});\n\n\nconst Account ={\n    current: () => request.get<User>('/account'),\n    login: (user: UserFormValues) => request.post<User>('/account/login', user)\n}\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst request = {\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\n    post:<T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst EyeGlasses = {\n    listAll: () => request.get<EyeGlass[]>('/EyeGlasses'),\n    getById: (id: string) => request.get<EyeGlass>(`/EyeGlasses/${id}`),\n    create: (eyeGlass: EyeGlass) => request.post<void>('/EyeGlasses', eyeGlass),\n    update: (eyeGlass: EyeGlass) => request.put<void>(`/EyeGlasses/${eyeGlass.id}`, eyeGlass),\n    delete: (id: string) => request.del<void>(`/EyeGlasses/${id}`),\n}\n\nconst agent = {\n    EyeGlasses, \n    Account\n}\n\nexport default agent;","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    user: User | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => {\n                this.user = user;\n            })\n            history.push('/search');\n            store.modalStore.closeModal();\n        } catch (error) {\n            throw error;\n        }\n    }\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n\n    getUser = async () => {\n        try{\n            const user = await agent.Account.current();\n            runInAction(() => this.user = user);\n        } catch(error){\n            console.log(error);\n        }\n    }\n    \n}","import EyeglassStore from \"./eyeglassStore\";\nimport {createContext, useContext} from \"react\";\nimport CommonStore from \"./commonStore\";\nimport UserStore from \"./userStore\";\nimport ModalStore from \"./modalStore\";\n\ninterface Store{\n    eyeglassStore: EyeglassStore;\n    commonStore: CommonStore;\n    userStore: UserStore;\n    modalStore: ModalStore;\n}\n\nexport const store: Store = {\n    eyeglassStore: new EyeglassStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore(){\n    return useContext(StoreContext);\n}","import {makeAutoObservable} from \"mobx\";\nimport {EyeGlass} from \"../models/eyeGlass\";\nimport agent from \"../api/agent\";\n\nexport default  class EyeglassStore {\n    eyeGlasses: EyeGlass[] = [];\n    loading: boolean = false;\n    loadingInitial: boolean = false;\n    \n    constructor() {\n        makeAutoObservable(this);    \n    }\n    \n    loadEyeglasses = async () => {\n        this.setLoadingInitial(true);\n        try{\n            this.eyeGlasses = await agent.EyeGlasses.listAll();\n            this.setLoadingInitial(false);\n        } catch(error){\n            console.log(error);\n            this.setLoadingInitial(false);\n        }\n    }\n    \n    setLoadingInitial = (state: boolean) => {\n        this.loadingInitial = state;\n    }\n}","import {makeAutoObservable, reaction} from \"mobx\";\nimport {AxiosError} from \"axios\";\n\nexport default class CommonStore {\n    error: AxiosError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded: boolean = false;\n    constructor() {\n        makeAutoObservable(this);\n        reaction(() => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token);\n                } else {\n                    window.localStorage.removeItem('jwt');\n                }\n            });\n    }\n\n    setServerError = (error: AxiosError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore{\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import {Container, Menu, Image, Dropdown} from \"semantic-ui-react\";\nimport {NavLink} from \"react-router-dom\";\nimport {useStore} from \"../stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nconst NavBar = () => {\n    const {userStore: {logout}} = useStore();\n    return(\n        <Menu inverted fixed='top'>\n            <Container>\n                <Menu.Item as={NavLink} to='/' exact header>\n                    <img src={'/eye-glasses.png'} alt=\"logo\" style={{marginRight: '10px'}}/>\n                </Menu.Item>\n                <Menu.Item as={NavLink} to={'/search'} name={'Search'} />\n                <Menu.Item as={NavLink} to={'/eyeglasses'} name='Eye Glasses'/>\n                <Menu.Item as={NavLink} to={'/document-upload'} name='Upload Doc'/>\n                <Menu.Item position={'right'}>\n                    <Image src={'/user.png'} avatar spaced={'right'}/>\n                    <Dropdown pointing={'top left'} text={'Admin'}>\n                        <Dropdown.Menu>\n                            <Dropdown.Item onClick={logout} text={'Logout'} icon={'power'}/>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Item>\n            </Container>\n        </Menu>\n    )\n} \n\nexport default observer(NavBar);","import { useField } from \"formik\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props{\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;\n}\nconst MyTextInput = (props: Props) => {\n    const [field, meta] = useField(props.name);\n\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props}/>\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}\n\nexport default MyTextInput;","import { ErrorMessage, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst LoginForm = () => {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch( () =>\n                setErrors({error: 'Invalid email or password'}))}\n        >\n            {({handleSubmit, isSubmitting, errors}) => (\n\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Login to Eyeglass Bay' color='teal' textAlign='center' />\n                    <MyTextInput name='email' placeholder='Email'/>\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\n                    <ErrorMessage\n                        name='error'\n                        render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\n                    />\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default observer(LoginForm);","import {Button, Container, Header, Segment, Image} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {useStore} from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\n\nconst HomePage = () => {\n    const {userStore, modalStore} = useStore();\n    return (\n        <Segment inverted textAlign={'center'} vertical className={'masthead'}>\n            <Container text>\n                \n                <Header as={'h1'} inverted>\n                    <Image size='massive' src={'/eye-glasses.png'} alt={'logo'} style={{marginBottom: '0.2em'}} />\n                    Eyeglass Bay\n                </Header>\n                {userStore.isLoggedIn ? (\n                    <>\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\n                        <Button as={Link} to=\"/search\" size='huge' inverted>\n                            Go to Search!\n                        </Button>\n                    </>\n\n                ) : (\n                    <>\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\n                            Login!\n                        </Button>\n                    </>\n                )}\n            </Container>\n        </Segment> \n    )\n}\n\nexport default HomePage;","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\nimport React from \"react\";\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n    const {userStore: {isLoggedIn}} = useStore();\n    return (\n        <Route\n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n        />\n    )\n}","import { Dimmer, Loader } from 'semantic-ui-react';\ninterface Props{\n    inverted?: boolean;\n    content?: string;\n}\nconst LoadingComponent = ({inverted = true, content = 'Loading...'}: Props) => {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content}/>\n        </Dimmer>\n    )\n}\n\nexport default LoadingComponent;","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\n\nconst ModalContainer = () => {\n    const {modalStore} = useStore();\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    );\n}\n\n\nexport default observer(ModalContainer);","import {useStore} from \"../../app/stores/store\";\nimport {useEffect} from \"react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport {EyeGlass} from \"../../app/models/eyeGlass\";\nimport {List} from \"semantic-ui-react\";\nimport {observer} from \"mobx-react-lite\";\n\nconst EyeglassList = () => {\n\n    const {eyeglassStore} = useStore();\n\n    useEffect(() => {\n        const loadEyeglasses = async () => {\n            await eyeglassStore.loadEyeglasses();\n        }\n        loadEyeglasses();\n    }, [eyeglassStore])\n\n    if (eyeglassStore.loadingInitial) return <LoadingComponent content='Loading app' />\n        \n    return (\n        <>\n            <List>\n                {eyeglassStore.eyeGlasses.map((eyeGlass: EyeGlass) => (\n                        <List.Item key={eyeGlass.id}>\n                            {eyeGlass.productName}\n                        </List.Item>\n                    ))}\n            </List>\n        </>\n    );\n}\n\nexport default observer(EyeglassList);","import {observer} from \"mobx-react-lite\";\n\nconst DocumentUpload = () =>{\n    return(\n        <h1>Document Upload goes here</h1>\n    )\n}\n\nexport default observer(DocumentUpload);","import { Message } from \"semantic-ui-react\"\n\ninterface Props{\n    errors: any;\n}\n\nconst ValidationErrors = ({ errors } : Props) => {\n    return (\n        <Message error> \n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => {\n                        return <Message.Item key={i}>{err}</Message.Item>\n                    })}\n                </Message.List>\n            )}\n        </Message>\n    )\n}\n\nexport default ValidationErrors;","import {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nconst TestErrors = () => {\n    const baseUrl = ''//process.env.REACT_APP_API_URL;\n\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + '/buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + '/buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + '/buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + '/buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'EyeGlasses/dab').catch(err => console.log(err.response));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'eyeGlasses', {}).catch(err => {setErrors(err)});\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors && <ValidationErrors errors={errors} />}\n        </>\n    )\n}\n\nexport default TestErrors;","import { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nconst ServerError = () => {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header sub as='h5' color='red' content={commonStore.error?.response!.statusText} />\n            {commonStore.error?.response!.data &&\n            <Segment>\n                <Header as='h4' content='Stack trace' color='teal'/>\n                <code style={{marginTop: '10px'}}>{commonStore.error.response!.data}</code>\n            </Segment>}\n        </Container>\n    )\n}\n\nexport default observer(ServerError);","import { Link } from \"react-router-dom\";\nimport { Header, Segment, Icon, Button } from \"semantic-ui-react\";\n\nconst NotFound = () =>{\n    return (\n        <Segment>\n            <Header icon>\n                <Icon name='search'/>\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/search' primary>\n                    Return to Main page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}\n\nexport default NotFound;","import {observer} from \"mobx-react-lite\";\n\nconst Search = () => {\n    return (\n        <h1>Search page goes here</h1>\n    )\n}\nexport default observer(Search);","import React, {useEffect} from 'react';\nimport {Container} from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Route, Switch} from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport PrivateRoute from \"./PrivateRoute\";\nimport {useStore} from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport EyeglassList from '../../features/eyeglass/EyeglassList';\nimport DocumentUpload from \"../../features/document/DocumentUpload\";\nimport TestErrors from '../../features/errors/TestError';\nimport ServerError from '../../features/errors/ServerError';\nimport NotFound from '../../features/errors/NotFound';\nimport Search from '../../features/search/Search';\nimport {ToastContainer} from \"react-toastify\";\n\nfunction App() {\n\n    const { commonStore, userStore} = useStore();\n\n\n    useEffect(() => {\n        if(commonStore.token){\n            userStore.getUser().finally(() => commonStore.setAppLoaded());\n        } else{\n            commonStore.setAppLoaded();\n        }\n    }, [commonStore, userStore])\n\n    if(!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n    return (\n        <>\n            <ToastContainer position={'bottom-right'}  hideProgressBar/>\n            <ModalContainer />\n            <Route exact path='/' component={HomePage} />\n            <Route\n                path={'/(.+)'}\n                render={() => (\n                    <>\n                        <NavBar />\n                        <Container style={{ marginTop: '7em' }}>\n                            <Switch>\n                                <PrivateRoute exact path='/' component={HomePage} />\n                                <PrivateRoute path='/search' component={Search} />\n                                <PrivateRoute path='/eyeglasses' component={EyeglassList} />\n                                <PrivateRoute path='/document-upload' component={DocumentUpload} />\n                                <PrivateRoute path={'/errors'} component={TestErrors}/>\n                                <Route path='/server-error' component={ServerError}/>\n                                <Route component={NotFound} />\n                            </Switch>\n                        </Container>\n                    </>\n                )}\n            />\n            \n        </>\n    );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store, StoreContext} from './app/stores/store';\nimport {Router} from \"react-router-dom\";\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <StoreContext.Provider value={store}>\n        <Router history={history}>\n            <ScrollToTop/>\n            <App />\n        </Router>\n    </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}