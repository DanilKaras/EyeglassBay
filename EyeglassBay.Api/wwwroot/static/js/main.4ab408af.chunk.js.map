{"version":3,"sources":["app/api/agent.ts","app/stores/userStore.ts","app/stores/searchStore.ts","app/stores/store.ts","app/stores/eyeglassStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/ebayParserStore.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/home/HomePage.tsx","app/layout/PrivateRoute.tsx","app/layout/LoadingComponent.tsx","app/common/modals/ModalContainer.tsx","features/eyeglass/EyeglassList.tsx","features/document/DocumentUpload.tsx","features/errors/ValidationErrors.tsx","features/errors/TestError.tsx","features/errors/ServerError.tsx","features/errors/NotFound.tsx","features/search/searchPlaceholder.tsx","features/search/searchBar.tsx","features/search/profitCalculator.tsx","features/search/searchResultItem.tsx","features/search/search.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","url","get","then","query","body","post","put","delete","agent","EyeGlasses","listAll","getById","id","create","eyeGlass","update","Account","current","login","user","EbayParser","getItems","ebayRequest","params","searchString","originalPrice","coefficient","getMinItem","UserStore","creds","setToken","runInAction","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","console","log","makeAutoObservable","this","SearchStore","eyeglassStore","eyeGlasses","loading","loadingInitial","loadEyeglasses","setLoadingInitial","state","getItem","appLoaded","setAppLoaded","reaction","setItem","userStore","modal","open","openModal","content","ebayParserStore","minItem","ebayItems","initialLoad","getMinItemByRequest","toggleLoad","requestStore","setRequest","getAllItemByRequest","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","name","position","Image","avatar","spaced","Dropdown","pointing","text","onClick","icon","MyTextInput","props","useField","field","meta","Form","Field","fluid","width","touched","label","Label","basic","color","initialValues","email","password","onSubmit","values","setErrors","catch","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","style","marginBottom","Button","positive","HomePage","Segment","vertical","size","isLoggedIn","Link","PrivateRoute","Component","component","rest","LoadingComponent","Dimmer","active","Loader","Modal","onClose","Content","useEffect","List","map","productName","ValidationErrors","Message","err","i","TestErrors","useState","Group","widths","baseUrl","primary","sub","statusText","marginTop","NotFound","Icon","Inline","SearchPlaceholder","divided","Placeholder","rectangular","Line","validationSchema","Yup","required","typeError","moreThan","handleFormSubmit","enableReinitialize","isValid","dirty","disabled","floated","initPrice","toString","value","setValue","profit","setProfit","newPrice","setNewPrice","price","parseFloat","clearPrice","evaluate","round","priceRemoveAmountWhenNoDiscount","priceWithNoCommission","newProfit","newPriceAfterDiscount","Grid","Row","Column","onValueChange","Number","isNaN","prefix","step","SearchResultItem","item","isMyShop","corner","tooltip","image","Meta","Detail","isDiscounted","discount","Description","columns","shopName","priceNoDiscount","isFreeDelivery","isDeliveryNotSpecified","deliveryPrice","totalPrice","Extra","href","target","length","warn","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","centered","Divider","horizontal","index","finally","path","Search","EyeglassList","DocumentUpload","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","useLocation","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4ab408af.chunk.js","sourcesContent":["import axios, {AxiosError, AxiosResponse} from \"axios\";\nimport {EyeGlass} from \"../models/eyeGlass\";\nimport {toast} from \"react-toastify\";\nimport {history} from '../../index';\nimport {store} from \"../stores/store\";\nimport {User, UserFormValues} from \"../models/user\";\nimport {EbayProductItem, EbayRequest} from \"../models/ebaySearchRequest\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if(token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    return response; \n}, (error: AxiosError) => {\n    const {data, status, config} = error.response!;\n    switch (status){\n        case 400:\n            if(typeof data === 'string'){\n                toast.error(data);\n            }\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\n               history.push('/not-found');\n            }\n            if(data.errors){\n                const modalStateErrors = [];\n                for(const key in data.errors){\n                    if(data.errors[key]){\n                        modalStateErrors.push(data.errors[key]);\n                    }\n                }\n                throw modalStateErrors.flat();\n            } else {\n                toast.error(data);\n            }\n            break;\n        case 401:\n            //toast.error('unauthorised');\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            store.commonStore.setServerError(error);\n            history.push('/server-error');\n            break;\n    }\n    return Promise.reject(error);\n});\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst request = {\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\n    getParams: <T>(url:string, query: {}) => axios.get<T>(url, query).then(responseBody),\n    post:<T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst EyeGlasses = {\n    listAll: () => request.get<EyeGlass[]>('/EyeGlasses'),\n    getById: (id: string) => request.get<EyeGlass>(`/EyeGlasses/${id}`),\n    create: (eyeGlass: EyeGlass) => request.post<void>('/EyeGlasses', eyeGlass),\n    update: (eyeGlass: EyeGlass) => request.put<void>(`/EyeGlasses/${eyeGlass.id}`, eyeGlass),\n    delete: (id: string) => request.del<void>(`/EyeGlasses/${id}`),\n}\n\nconst Account = {\n    current: () => request.get<User>('/account'),\n    login: (user: UserFormValues) => request.post<User>('/account/login', user)\n}\n\nconst EbayParser = {\n    getItems: (ebayRequest: EbayRequest) => request.getParams<EbayProductItem[]>(`/EbaySearch`, {\n        params: {\n            searchString: ebayRequest.searchString, \n            originalPrice: ebayRequest.originalPrice,\n            coefficient: ebayRequest.coefficient\n        }\n    }),\n    getMinItem: (ebayRequest: EbayRequest) => request.getParams<EbayProductItem>(`/EbaySearch/min`, {\n        params: {\n            searchString: ebayRequest.searchString,\n            originalPrice: ebayRequest.originalPrice,\n            coefficient: ebayRequest.coefficient\n        }\n    }),\n}\n    \nconst agent = {\n    EyeGlasses, \n    Account,\n    EbayParser\n}\n\nexport default agent;","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    user: User | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => {\n                this.user = user;\n            })\n            history.push('/search');\n            store.modalStore.closeModal();\n        } catch (error) {\n            throw error;\n        }\n    }\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n\n    getUser = async () => {\n        try{\n            const user = await agent.Account.current();\n            runInAction(() => this.user = user);\n        } catch(error){\n            console.log(error);\n        }\n    }\n    \n}","import { makeAutoObservable } from \"mobx\"\nimport {EbayRequest} from \"../models/ebaySearchRequest\";\n\nexport default class SearchStore{\n\n    request: EbayRequest = {} as EbayRequest;\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setRequest(request: EbayRequest): void{\n        this.request = request;\n    }\n   \n}","import EyeglassStore from \"./eyeglassStore\";\nimport {createContext, useContext} from \"react\";\nimport CommonStore from \"./commonStore\";\nimport UserStore from \"./userStore\";\nimport ModalStore from \"./modalStore\";\nimport EbayParserStore from \"./ebayParserStore\";\nimport SearchStore from \"./searchStore\";\n\ninterface Store{\n    eyeglassStore: EyeglassStore;\n    commonStore: CommonStore;\n    userStore: UserStore;\n    modalStore: ModalStore;\n    ebayParserStore: EbayParserStore;\n    requestStore: SearchStore;\n}\n\nexport const store: Store = {\n    eyeglassStore: new EyeglassStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    ebayParserStore: new EbayParserStore(),\n    requestStore: new SearchStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore(){\n    return useContext(StoreContext);\n}","import {makeAutoObservable} from \"mobx\";\nimport {EyeGlass} from \"../models/eyeGlass\";\nimport agent from \"../api/agent\";\n\nexport default  class EyeglassStore {\n    eyeGlasses: EyeGlass[] = [];\n    loading: boolean = false;\n    loadingInitial: boolean = false;\n    \n    \n    constructor() {\n        makeAutoObservable(this);    \n    }\n    \n    loadEyeglasses = async () => {\n        this.setLoadingInitial(true);\n        try{\n            this.eyeGlasses = await agent.EyeGlasses.listAll();\n            this.setLoadingInitial(false);\n        } catch(error){\n            console.log(error);\n            this.setLoadingInitial(false);\n        }\n    }\n    \n    setLoadingInitial = (state: boolean) => {\n        this.loadingInitial = state;\n    }\n}","import {makeAutoObservable, reaction} from \"mobx\";\nimport {AxiosError} from \"axios\";\n\nexport default class CommonStore {\n    error: AxiosError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded: boolean = false;\n    constructor() {\n        makeAutoObservable(this);\n        reaction(() => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token);\n                } else {\n                    window.localStorage.removeItem('jwt');\n                }\n            });\n    }\n\n    setServerError = (error: AxiosError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore{\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import {makeAutoObservable} from \"mobx\";\nimport agent from \"../api/agent\";\nimport {EbayProductItem, EbayRequest} from \"../models/ebaySearchRequest\";\nimport {store} from \"./store\";\n\n\nexport default class EbayParserStore{\n    \n    minItem: EbayProductItem = {} as EbayProductItem;\n    ebayItems: EbayProductItem[] = [];\n    loading: boolean = false;\n    initialLoad: boolean = true;\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    getMinItemByRequest = async (request: EbayRequest) => {\n        try{\n            this.toggleLoad(true);\n            store.requestStore.setRequest(request);\n            this.minItem = await agent.EbayParser.getMinItem(request);\n            this.toggleLoad(false);\n        }catch (error){\n            this.toggleLoad(true, error);\n        }\n    }\n\n    getAllItemByRequest = async (request: EbayRequest) => {\n        try{\n            this.toggleLoad(true);\n            store.requestStore.setRequest(request);\n            this.ebayItems = await agent.EbayParser.getItems(request);\n            this.toggleLoad(false);\n        }catch (error){\n            this.toggleLoad(true, error);\n        }\n    }\n    \n    toggleLoad = (loading: boolean, error: any = null) => {\n        this.initialLoad = false;\n        this.loading = loading;\n        if(error){\n            console.log(error);\n        }\n    }    \n}","import {Container, Menu, Image, Dropdown} from \"semantic-ui-react\";\nimport {NavLink} from \"react-router-dom\";\nimport {useStore} from \"../stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nconst NavBar = () => {\n    const {userStore: {logout}} = useStore();\n    return(\n        <Menu inverted fixed='top'>\n            <Container>\n                <Menu.Item as={NavLink} to='/' exact header>\n                    <img src={'/eye-glasses.png'} alt=\"logo\" />\n                </Menu.Item>\n                <Menu.Item as={NavLink} to={'/search'} name={'Search'} />\n                <Menu.Item as={NavLink} to={'/eyeglasses'} name='Eye Glasses'/>\n                <Menu.Item as={NavLink} to={'/document-upload'} name='Upload Doc'/>\n                <Menu.Item position={'right'}>\n                    <Image src={'/user.png'} avatar spaced={'right'}/>\n                    <Dropdown pointing={'top left'} text={'Admin'}>\n                        <Dropdown.Menu>\n                            <Dropdown.Item onClick={logout} text={'Logout'} icon={'power'}/>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Item>\n            </Container>\n        </Menu>\n    )\n} \n\nexport default observer(NavBar);","import { useField } from \"formik\";\nimport {Form, Label, SemanticWIDTHS} from \"semantic-ui-react\";\n\ninterface Props{\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;\n    width?: SemanticWIDTHS | undefined;\n    step?: number | undefined;\n}\nconst MyTextInput = (props: Props) => {\n    const [field, meta] = useField(props.name);\n\n    return (\n        <Form.Field fluid width={props.width} error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props}/>\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}\n\nexport default MyTextInput;","import { ErrorMessage, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst LoginForm = () => {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch( () =>\n                setErrors({error: 'Invalid email or password'}))}\n        >\n            {({handleSubmit, isSubmitting, errors}) => (\n\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Login to Eyeglass Bay' color='teal' textAlign='center' />\n                    <MyTextInput name='email' placeholder='Email'/>\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\n                    <ErrorMessage\n                        name='error'\n                        render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\n                    />\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default observer(LoginForm);","import {Button, Container, Header, Segment, Image} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {useStore} from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\n\nconst HomePage = () => {\n    const {userStore, modalStore} = useStore();\n    return (\n        <Segment inverted textAlign={'center'} vertical className={'masthead'}>\n            <Container text>\n                \n                <Header as={'h1'} inverted>\n                    <Image size='massive' src={'/eye-glasses.png'} alt={'logo'} style={{marginBottom: '0.2em'}} />\n                    Eyeglass Bay\n                </Header>\n                {userStore.isLoggedIn ? (\n                    <>\n                        <Button as={Link} to=\"/search\" size='huge' inverted>\n                            Go to Search!\n                        </Button>\n                    </>\n\n                ) : (\n                    <>\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\n                            Login!\n                        </Button>\n                    </>\n                )}\n            </Container>\n        </Segment> \n    )\n}\n\nexport default HomePage;","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\nimport React from \"react\";\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n    const {userStore: {isLoggedIn}} = useStore();\n    return (\n        <Route\n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n        />\n    )\n}","import { Dimmer, Loader } from 'semantic-ui-react';\ninterface Props{\n    inverted?: boolean;\n    content?: string;\n}\nconst LoadingComponent = ({inverted = true, content = 'Loading...'}: Props) => {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content}/>\n        </Dimmer>\n    )\n}\n\nexport default LoadingComponent;","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\n\nconst ModalContainer = () => {\n    const {modalStore} = useStore();\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    );\n}\n\n\nexport default observer(ModalContainer);","import {useStore} from \"../../app/stores/store\";\nimport {useEffect} from \"react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport {EyeGlass} from \"../../app/models/eyeGlass\";\nimport {List} from \"semantic-ui-react\";\nimport {observer} from \"mobx-react-lite\";\n\nconst EyeglassList = () => {\n\n    const {eyeglassStore} = useStore();\n\n    useEffect(() => {\n        const loadEyeglasses = async () => {\n            await eyeglassStore.loadEyeglasses();\n        }\n        loadEyeglasses();\n    }, [eyeglassStore])\n\n    if (eyeglassStore.loadingInitial) return <LoadingComponent content='Loading app' />\n        \n    return (\n        <>\n            <List>\n                {eyeglassStore.eyeGlasses.map((eyeGlass: EyeGlass) => (\n                        <List.Item key={eyeGlass.id}>\n                            {eyeGlass.productName}\n                        </List.Item>\n                    ))}\n            </List>\n        </>\n    );\n}\n\nexport default observer(EyeglassList);","import {observer} from \"mobx-react-lite\";\n\nconst DocumentUpload = () =>{\n    return(\n        <h1>Document Upload goes here</h1>\n    )\n}\n\nexport default observer(DocumentUpload);","import { Message } from \"semantic-ui-react\"\n\ninterface Props{\n    errors: any;\n}\n\nconst ValidationErrors = ({ errors } : Props) => {\n    return (\n        <Message error> \n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => {\n                        return <Message.Item key={i}>{err}</Message.Item>\n                    })}\n                </Message.List>\n            )}\n        </Message>\n    )\n}\n\nexport default ValidationErrors;","import {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nconst TestErrors = () => {\n    const baseUrl = ''//process.env.REACT_APP_API_URL;\n\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + '/buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + '/buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + '/buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + '/buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'EyeGlasses/dab').catch(err => console.log(err.response));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'eyeGlasses', {}).catch(err => {setErrors(err)});\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors && <ValidationErrors errors={errors} />}\n        </>\n    )\n}\n\nexport default TestErrors;","import { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nconst ServerError = () => {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header sub as='h5' color='red' content={commonStore.error?.response!.statusText} />\n            {commonStore.error?.response!.data &&\n            <Segment>\n                <Header as='h4' content='Stack trace' color='teal'/>\n                <code style={{marginTop: '10px'}}>{commonStore.error.response!.data}</code>\n            </Segment>}\n        </Container>\n    )\n}\n\nexport default observer(ServerError);","import { Link } from \"react-router-dom\";\nimport { Header, Segment, Icon, Button } from \"semantic-ui-react\";\n\nconst NotFound = () =>{\n    return (\n        <Segment>\n            <Header icon>\n                <Icon name='search'/>\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/search' primary>\n                    Return to Main page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport {Item, Placeholder, Segment} from 'semantic-ui-react';\n\n\nconst SearchPlaceholder = () => {\n        return (\n            <>\n                <Segment >\n                    <Item.Group divided>\n                            <Item>\n                                <Item.Image size={'small'}>\n                                    <Placeholder>\n                                        <Placeholder.Image rectangular />\n                                    </Placeholder>\n                                </Item.Image>\n                                <Item.Content>\n                                    <Placeholder fluid>\n                                        <Placeholder.Line />\n                                        <Placeholder.Line />\n                                        <Placeholder.Line />\n                                    </Placeholder>\n                                </Item.Content>\n                            </Item>\n                    </Item.Group>\n                </Segment>         \n                \n            </>\n        )\n}\n\nexport default  SearchPlaceholder;","import {observer} from \"mobx-react-lite\";\nimport {EbayRequest} from \"../../app/models/ebaySearchRequest\";\nimport {Button, Form} from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport {Formik} from \"formik\";\nimport {useStore} from \"../../app/stores/store\";\nimport {useState} from \"react\";\nimport * as Yup from \"yup\";\n\n\nconst SearchBar = () => {\n    const { ebayParserStore } = useStore();\n    const { getAllItemByRequest } = ebayParserStore;\n    const [ebayRequest] = useState<EbayRequest>(\n        {\n            searchString: ''\n        } as EbayRequest);\n\n    const validationSchema = Yup.object({\n        searchString: Yup.string().required('The search string is required'),\n        originalPrice: Yup.number().typeError('Number is required').required('Price is required').moreThan(0, 'Price must be greater than 0'),\n        coefficient: Yup.number().typeError('Number is required').required('Coefficient is required').moreThan(0, 'Coefficient must be greater than 0')\n    })\n\n\n    \n    const handleFormSubmit = async (request: EbayRequest) => {\n        await getAllItemByRequest(request);\n    }\n    return (\n        <>\n            <Formik\n                validationSchema={validationSchema}\n                enableReinitialize\n                initialValues={ebayRequest}\n                onSubmit={(values: EbayRequest) => handleFormSubmit(values)}\n            >\n                {({ handleSubmit, isValid, isSubmitting, errors, dirty}) => (\n                    <Form onSubmit={handleSubmit} autoComplete='off'>\n                        <Form.Group widths='equal'>\n                            <MyTextInput name={'searchString'} placeholder={'Search'} type={'text'} width={10}/>\n                            <MyTextInput name={'originalPrice'} placeholder={'Price'} type={'text'} width={4} />\n                            <MyTextInput name={'coefficient'} placeholder={'Coefficient'} type={'text'} width={4} />\n                        </Form.Group>\n                        <Button\n                            disabled={ebayParserStore.loading || isSubmitting || !dirty || !isValid}\n                            loading={ebayParserStore.loading}\n                            positive\n                            type='submit'\n                            floated={'right'}\n                            content='Submit' />\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n}\n\nexport default observer(SearchBar);","import { round, evaluate } from 'mathjs'\nimport { useEffect, useState} from \"react\";\nimport {Grid, Icon, Label} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport CurrencyInput from \"react-currency-input-field\";\n\ninterface Props{\n    initPrice: number | null\n}\nconst ProfitCalculator = ({initPrice}: Props) => {\n    const {requestStore} = useStore();\n    const [value, setValue] = useState<string>(initPrice?.toString() || '');\n    const [profit, setProfit] = useState<number>(0);\n    const [newPrice, setNewPrice] = useState<number>(0);\n    \n    useEffect(() => {\n        const price = parseFloat(value) || 0\n        \n        const {coefficient, originalPrice} = requestStore.request;\n\n        let clearPrice: number = evaluate(`${originalPrice} * (1 - ${coefficient} / 100)`);\n        clearPrice = round<number>(clearPrice, 2);\n        const priceRemoveAmountWhenNoDiscount: number = evaluate(`${price}*0.87`);\n        const priceWithNoCommission = evaluate(`${priceRemoveAmountWhenNoDiscount} * 0.83 - 5`);\n        let newProfit = evaluate(`${priceWithNoCommission} - ${clearPrice}`);\n        newProfit = round<number>(newProfit, 2);\n\n        const newPriceAfterDiscount = round<number>(evaluate(`${price} * 0.87`),2)\n        setNewPrice(newPriceAfterDiscount);\n        setProfit(newProfit);\n    }, [value])\n    \n    const onChange = (value: string | undefined) => {\n        if (!value) {\n            setValue('');\n            return;\n        }\n        if (Number.isNaN(Number(value))) {\n            return;\n        }\n        setValue(value);\n    }\n    \n    return (\n        <>\n            <Grid.Row>\n                <Grid.Column width={12}>\n                    <div className='ui input'>\n                        <CurrencyInput\n                            name=\"newPrice\"\n                            value={value}\n                            onValueChange={onChange}\n                            placeholder=\"Please enter a Price\"\n                            prefix={'$'}\n                            step={1}\n                        />\n                    </div>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column width={12}>\n                    <Label color={profit > 0 ? 'teal' : 'red'}>\n                        <Icon name={profit > 0 ? 'arrow alternate circle up' : 'arrow alternate circle down'}/> New Profit $ {profit}\n                    </Label>\n                    <Label color={'orange'}>\n                        <Icon name='money'/> New Price $ {newPrice}\n                    </Label>\n                </Grid.Column>\n            </Grid.Row>\n\n        </>\n    );\n}\n\nexport default observer(ProfitCalculator);","import {Grid, Icon, Input, Item, Label} from \"semantic-ui-react\";\nimport {EbayProductItem} from \"../../app/models/ebaySearchRequest\";\nimport ProfitCalculator from \"./profitCalculator\";\n\n\ninterface Props {\n    item: EbayProductItem\n}\n\nconst SearchResultItem = ({item}: Props) => {\n    return (\n            <Item>\n                <Item.Image\n                    size='small'\n                    label={item.isMyShop && {\n                        color: 'green',\n                        corner: 'left',\n                        icon: 'check',\n                        tooltip: 'Your shop'\n                    }}\n                    src={item.image}\n                />\n                <Item.Content>\n                    <Item.Header>{item.productName}</Item.Header>\n                    <Item.Meta>\n                        <Label color={'violet'}>\n                            <Icon name='money bill alternate outline' /> {item.price} $\n                            <Label.Detail>{item.isDiscounted ? `Discount is ${item.discount} %` : 'No Discount'}</Label.Detail>\n                        </Label>\n                        <Label color={item.profit > 0 ? 'green' : 'red'}>\n                            <Icon name='money bill alternate'/> Profit $ {item.profit}\n                        </Label>\n                        </Item.Meta>\n                    <Item.Description>\n                        <Grid columns={1}>\n                            <Grid.Row>\n                                <Grid.Column width={12}>\n                                    <span>Seller: <b>{item.shopName}</b></span>\n                                    {item.isDiscounted &&  <span> | Price with no discount: <b>{item.priceNoDiscount} $</b> </span>}\n                                    {(!item.isFreeDelivery || item.isDeliveryNotSpecified) && (<span> | Delivery: <b>{item.deliveryPrice || 'No specified'} $</b> </span>)}\n                                    <span> | Total Price <b>{item.totalPrice} $</b></span>\n                                </Grid.Column>\n                            </Grid.Row>\n                            {item.isMyShop && <ProfitCalculator initPrice={item.priceNoDiscount}/>}\n                        </Grid>\n                       \n                        \n                    </Item.Description>\n                    <Item.Extra>\n                        <Label as='a'\n                               color={'blue'}\n                               href={item.url}\n                               target={'_blank'}>\n                            <Icon name={'globe'}/> Visit Page\n                        </Label>\n                       \n                    </Item.Extra>\n                </Item.Content>\n            </Item>\n    )\n}\n\nexport default SearchResultItem;","import {observer} from \"mobx-react-lite\";\nimport {Grid, Item, Icon, Divider, Header, Segment} from 'semantic-ui-react'\nimport {useStore} from \"../../app/stores/store\";\nimport SearchPlaceholder from \"./searchPlaceholder\";\nimport SearchBar from \"./searchBar\";\nimport SearchResultItem from \"./searchResultItem\";\nimport {useEffect} from \"react\";\nimport {toast} from \"react-toastify\";\n\nconst Search = () => {\n    const { ebayParserStore } = useStore();\n    const { ebayItems, loading, initialLoad } = ebayParserStore;\n    useEffect(() => {\n        if(!initialLoad && ebayItems?.length === 0){\n            toast.warn('Server Error or No Items. Please run the search again.', {\n                position: \"bottom-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n    }, [ebayItems, loading])\n    return (\n        <>\n            <Grid centered>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        <SearchBar/>\n                    </Grid.Column>\n                </Grid.Row>\n                <Divider horizontal>\n                    <Header as='h4'>\n                        <Icon name='tag'/>\n                        Eyeglasses. Number of items: { !loading ? ebayItems?.length || '' : 0}\n                    </Header>\n                </Divider>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        {loading && <SearchPlaceholder/>}\n                        {!loading && ebayItems && ebayItems.length > 0 &&\n                        <Segment>\n                            <Item.Group divided>\n                                {ebayItems.map((item, index) => (\n                                    <SearchResultItem item={item} key={item.shopName + index}/>))\n                                }\n                            </Item.Group>\n                        </Segment>\n                        }\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </>\n    )\n}\nexport default observer(Search);","import React, {useEffect} from 'react';\nimport {Container} from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Route, Switch} from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport PrivateRoute from \"./PrivateRoute\";\nimport {useStore} from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport EyeglassList from '../../features/eyeglass/EyeglassList';\nimport DocumentUpload from \"../../features/document/DocumentUpload\";\nimport TestErrors from '../../features/errors/TestError';\nimport ServerError from '../../features/errors/ServerError';\nimport NotFound from '../../features/errors/NotFound';\nimport Search from '../../features/search/search';\nimport {ToastContainer} from \"react-toastify\";\n\nfunction App() {\n\n    const { commonStore, userStore} = useStore();\n\n\n    useEffect(() => {\n        commonStore.token \n            ? userStore.getUser().finally(() => commonStore.setAppLoaded())\n            : commonStore.setAppLoaded();\n        \n    }, [commonStore, userStore])\n\n    if(!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n    return (\n        <>\n            <ToastContainer position={'bottom-right'}  hideProgressBar/>\n            <ModalContainer />\n            <Route exact path='/' component={HomePage} />\n            <Route\n                path={'/(.+)'}\n                render={() => (\n                    <>\n                        <NavBar />\n                        <Container style={{ marginTop: '7em' }}>\n                            <Switch>\n                                <PrivateRoute exact path='/' component={HomePage} />\n                                <PrivateRoute path='/search' component={Search} />\n                                <PrivateRoute path='/eyeglasses' component={EyeglassList} />\n                                <PrivateRoute path='/document-upload' component={DocumentUpload} />\n                                <PrivateRoute path={'/errors'} component={TestErrors}/>\n                                <Route path='/server-error' component={ServerError}/>\n                                <Route component={NotFound} />\n                            </Switch>\n                        </Container>\n                    </>\n                )}\n            />\n            \n        </>\n    );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store, StoreContext} from './app/stores/store';\nimport {Router} from \"react-router-dom\";\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <StoreContext.Provider value={store}>\n        <Router history={history}>\n            <ScrollToTop/>\n            <App />\n        </Router>\n    </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}